name: Build & Push 16/dev/alpine to Image Registry

on:
  push:
    branches:
      - main
    paths:
      - "16/dev/alpine/**"
  pull_request:
    branches:
      - main
    paths:
      - "16/dev/alpine/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2.3.5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Set up Node.js for parsing metadata
        uses: actions/setup-node@v2.4.1

      - name: Login to Docker Hub
        uses: docker/login-action@v1.10.0
        with:
          username: hazmi35
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        continue-on-error: ${{ github.event_name == 'pull_request' }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: ${{ github.event_name == 'pull_request' }}

      - name: Extract workdir
        run: echo "WORKDIR=16/dev/alpine" >> $GITHUB_ENV

      - name: Extract metadata
        id: meta
        run: |
          export META=`cat ${{ env.WORKDIR }}/meta.json`
          TAGS=`node -p "JSON.parse(process.env.META).tags.join('\n')"`
          PLATFORMS=`node -p "JSON.parse(process.env.META).platforms.join(',')"`
          echo TAGS: $TAGS
          echo PLATFORMS: $PLATFORMS
          echo "::set-output name=tags::${TAGS//$'\n'/'%0A'}"
          echo "::set-output name=platforms::$PLATFORMS"

      - name: Generate Docker image metadata
        uses: docker/metadata-action@v3.5.0
        id: img_meta
        with:
          images: |
            hazmi35/node
            ghcr.io/Hazmi35/node
          tags: ${{ steps.meta.outputs.tags }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2.7.0
        with:
          context: ${{ env.WORKDIR }}
          platforms: ${{ steps.meta.outputs.platforms }}
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.img_meta.outputs.tags }}
          labels: ${{ steps.img_meta.outputs.labels }}
          cache-from: type=gha,mode=max
          cache-to: type=gha,mode=max

      # Well, turns out it doesn't support PAT yet. Please see https://github.com/peter-evans/dockerhub-description/issues/24 and https://github.com/docker/roadmap/issues/115
      #- name: Update repo description
      #  uses: peter-evans/dockerhub-description@v2.4.1
      #  with:
      #    username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #    password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      #    repository: hazmi35/node
